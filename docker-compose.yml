version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: swimdb
    environment:
      POSTGRES_DB: swimdb
      POSTGRES_USER: swimuser
      POSTGRES_PASSWORD: s3curePg2025!
    mem_limit: "768m"
    cpus: "0.75"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swimuser -d swimdb"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7.4-alpine
    container_name: swimredis
    command: ["redis-server", "--appendonly", "yes"]
    mem_limit: "256m"
    cpus: "0.25"
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: swimbackend
    env_file:
      - ./backend/.env
    mem_limit: "1g"
    cpus: "1.0"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/static:/app/static
      - ./backend/templates:/app/templates
      - ./backend/alembic.ini:/app/alembic.ini   # гарантируем правильный alembic.ini внутри контейнера
      - logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8080:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s
    command: bash -lc "alembic -c /app/alembic.ini upgrade head && uvicorn app:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: swimworker
    env_file:
      - ./backend/.env
    mem_limit: "512m"
    cpus: "0.5"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - logs:/app/logs
    command: bash -lc "python worker.py"
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: swim_mailhog
    mem_limit: "256m"
    cpus: "0.25"
    ports:
      - "1025:1025"   # SMTP для приложения
      - "8025:8025"   # Web UI для просмотра писем
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  logs:
