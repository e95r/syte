version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: swimdb
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-swimdb}
      POSTGRES_USER: ${POSTGRES_USER:-swimuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
    mem_limit: "768m"
    cpus: "0.75"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7.4-alpine
    container_name: swimredis
    command: ["redis-server", "--appendonly", "yes"]
    mem_limit: "256m"
    cpus: "0.25"
    volumes:
      - redisdata:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: swimbackend
    env_file:
      - ./backend/.env
    mem_limit: "1g"
    cpus: "1.0"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/static:/app/static
      - ./backend/templates:/app/templates
      - ./backend/alembic.ini:/app/alembic.ini
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
      redis:
        condition: service_healthy
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s
    command: >-
      bash -lc "alembic -c /app/alembic.ini upgrade head && exec gunicorn -c gunicorn_conf.py app:app"
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: swimworker
    env_file:
      - ./backend/.env
    mem_limit: "512m"
    cpus: "0.5"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    command: bash -lc "python worker.py"
    restart: unless-stopped

  proxy:
    build:
      context: ./deploy/proxy
    container_name: swimproxy
    depends_on:
      backend:
        condition: service_healthy
    environment:
      GENERATE_DEV_CERT: ${GENERATE_DEV_CERT:-1}
    ports:
      - "${PROXY_HTTP_PORT:-8080}:80"
      - "${PROXY_HTTPS_PORT:-8443}:443"
    volumes:
      - ./deploy/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/proxy/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/certs:/etc/nginx/certs
      - ./backend/static:/var/www/static:ro
      - ./backend/storage:/var/www/storage:ro
      - proxy_cache:/var/cache/nginx
    healthcheck:
      test: ["CMD-SHELL", "curl -kfsS https://localhost/health || curl -fsS http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: swim_mailhog
    mem_limit: "256m"
    cpus: "0.25"
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  proxy_cache:
